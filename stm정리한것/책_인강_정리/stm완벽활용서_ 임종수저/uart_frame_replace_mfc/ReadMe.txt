uart는 115200bps(byte per second) 기준으로
책에서는  l476과 mfc끼리 서로 통신하였지만
현재  l476 보유중이지 않아서 f103을 mfc, f429를 l476 대신해서
수행할 수 있게끔 프로그래밍 하였음

uart 유의점
1byte당 86.8us 걸림 start 8bit data stop 합치면 10비트라서
1/115200 = 8.68us  8.68us * 10 = 86.8us
그래서 86.8us내로 데이터 수신 못 받으면
데이터 유실될 수 있으니 이 부분 조심하자

============================================

f103 : mfc 역할. 0.5s 간격으로 's' 송신. 
f429에서 보내는 uart 프레임 분석후 콘솔창으로 출력 내보냄
f429로 uart 프레임 보내기 위해 콘솔창에서 입력을 받아 보냄

usart1 : f429와 통신
usart2 : 컴퓨터와 통신
타이머2 : 500ms 마다 's'를 f429로 보내기 위해 사용


f429 : f103으로 부터 0.5s 간격으로 's' 받은걸 uart frame구성해서 f103으로 다시 보냄
'q'를 받았을때는 uart frame 다 받고 분석해서 특정 함수 포인터로 가서 함수처리

uart3 : f103와 통신

=============================================

f103 코드 분석
타이머 인터럽트를 통해 500ms마다 f429로 송신
uart rx 인터럽트를 통해 uart ready 플래그 set

- rx1인터럽트를 받았을 경우
STX받았을때(uart frame의 첫번째 값)
계속해서 uart frame을 받을수 있게 gCmdInfo를 사용함
버퍼에다가 값을 계속해서 저장하고 한번 받을때마다 uart ready 플래그 reset
char 버퍼 초기화해줌

ETX처럼 uart frame의 마지막 부분을 수신받았다면
콘솔창에다 값을 출력하는(여기서는 sine값 받은걸 출력함) 프로그램 수행함
끝나고 버퍼값 초기화 시키고 gCmdInfo = false해줌

- rx2인터럽트를 받았을 경우
위와 유사하게 동작하게끔 구성함
여기서는 STX = 'q'처럼 동작하게 만듦



f429코드 분석
전반적인 코드는 f103이랑 유사함
다른점은 함수포인터를 이용해서 uart frame분석뒤에 특정 함수로 이동하게끔 만드는거임